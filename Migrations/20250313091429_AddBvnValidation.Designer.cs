// <auto-generated />
using System;
using EntityProject.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EntityProject.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250313091429_AddBvnValidation")]
    partial class AddBvnValidation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("EntityProject.entities.CustomerDataNotFromBvn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnName("address")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("ChannelId")
                        .HasColumnName("channelId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("PhoneNumber")
                        .HasColumnName("phonenumber")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("PhoneNumberNotFromBvn")
                        .HasColumnName("phonenumberfrombvn")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("RegId")
                        .HasColumnName("regid")
                        .HasColumnType("int");

                    b.Property<long>("UserId")
                        .HasColumnName("user_id")
                        .HasColumnType("bigint");

                    b.Property<string>("UserName")
                        .HasColumnName("username")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("UserType")
                        .HasColumnName("user_type")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("created_at")
                        .HasColumnName("created_at")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("asset_capital_insurance_custdatanotfrombvn");
                });

            modelBuilder.Entity("EntityProject.entities.CustomerDevice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<int>("ChannelId")
                        .HasColumnName("channelId")
                        .HasColumnType("int");

                    b.Property<string>("Device")
                        .HasColumnName("device")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("LoginStatus")
                        .HasColumnName("login_status")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Session")
                        .HasColumnName("session")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("TrackDevice")
                        .HasColumnName("track_device")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("UserName")
                        .HasColumnName("username")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("UserType")
                        .HasColumnName("user_type")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("created_at")
                        .HasColumnName("created_at")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("asset_capital_insurance_customerdevice");
                });

            modelBuilder.Entity("EntityProject.entities.MobileDevice", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<int>("ChannelId")
                        .HasColumnName("channelId")
                        .HasColumnType("int");

                    b.Property<string>("DeviceId")
                        .HasColumnName("device")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("DeviceName")
                        .HasColumnName("device_name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("DeviceToken")
                        .HasColumnName("device_token")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Status")
                        .HasColumnName("status")
                        .HasColumnType("int");

                    b.Property<long>("UserId")
                        .HasColumnName("user_id")
                        .HasColumnType("bigint");

                    b.Property<string>("UserType")
                        .HasColumnName("user_type")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("created_at")
                        .HasColumnName("createdon")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("asset_capital_insurance_mobile_device");
                });

            modelBuilder.Entity("EntityProject.entities.OtpSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<string>("Otp")
                        .HasColumnName("otp")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("OtpType")
                        .HasColumnName("otp_type")
                        .HasColumnType("int");

                    b.Property<string>("Session")
                        .HasColumnName("session")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<long>("UserId")
                        .HasColumnName("user_id")
                        .HasColumnType("bigint");

                    b.Property<string>("UserType")
                        .HasColumnName("user_type")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("createdAt")
                        .HasColumnName("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("status")
                        .HasColumnName("status")
                        .HasColumnType("int");

                    b.Property<int>("ucid")
                        .HasColumnName("ucid")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("asset_capital_insurance_otp_session");
                });

            modelBuilder.Entity("EntityProject.entities.Registration", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("bigint");

                    b.Property<int>("AccountOpened")
                        .HasColumnName("AccountOpened")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnName("address")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Bvn")
                        .HasColumnName("bvn")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CustomerId")
                        .HasColumnName("customerId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("DeviceId")
                        .HasColumnName("deviceId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Devicename")
                        .HasColumnName("devicename")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("FirstName")
                        .HasColumnName("first_name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("LastName")
                        .HasColumnName("last_name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Nin")
                        .HasColumnName("nin")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Password")
                        .HasColumnName("password")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("ProfiledOpened")
                        .HasColumnName("ProfiledOpened")
                        .HasColumnType("int");

                    b.Property<string>("RequestReference")
                        .HasColumnName("RequestReference")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("UserName")
                        .HasColumnName("username")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("UserType")
                        .HasColumnName("user_type")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("ValidBvn")
                        .HasColumnName("validbvn")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("birth_date")
                        .HasColumnName("birth_date")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("email")
                        .HasColumnName("email")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("employerCode")
                        .HasColumnName("employerCode")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("gender")
                        .HasColumnName("gender")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("idCountry")
                        .HasColumnName("idCountry")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("idLga")
                        .HasColumnName("idLga")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("idReligion")
                        .HasColumnName("idreligion")
                        .HasColumnType("int");

                    b.Property<string>("idState")
                        .HasColumnName("idState")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("maidenName")
                        .HasColumnName("maiden_name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("maritalStatus")
                        .HasColumnName("marital_status")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("occupationId")
                        .HasColumnName("occupationId")
                        .HasColumnType("int");

                    b.Property<string>("otherNames")
                        .HasColumnName("othernames")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("phoneNumber")
                        .HasColumnName("phonenumber")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("sourceOfFund")
                        .HasColumnName("sourceOfFund")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("title")
                        .HasColumnName("title")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("transpin")
                        .HasColumnName("transpin")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("asset_capital_insurance_registration");
                });

            modelBuilder.Entity("EntityProject.entities.RegistrationSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<int>("ChannelId")
                        .HasColumnName("channelId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnName("created_on")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("RegId")
                        .HasColumnName("reg_id")
                        .HasColumnType("int");

                    b.Property<string>("Session")
                        .HasColumnName("session")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Status")
                        .HasColumnName("status")
                        .HasColumnType("int");

                    b.Property<long>("UserId")
                        .HasColumnName("user_id")
                        .HasColumnType("bigint");

                    b.Property<string>("UserType")
                        .HasColumnName("user_type")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("asset_capital_insurance_reg_session");
                });

            modelBuilder.Entity("EntityProject.entities.UserCredentials", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnName("user_id")
                        .HasColumnType("bigint");

                    b.Property<string>("UserType")
                        .HasColumnName("user_type")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("createdAt")
                        .HasColumnName("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("credential")
                        .HasColumnName("credential")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("credentialtype")
                        .HasColumnName("credential_type")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("retries")
                        .HasColumnName("retries")
                        .HasColumnType("int");

                    b.Property<int>("ucid")
                        .HasColumnName("ucid")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("asset_capital_insurance_user_credentials");
                });

            modelBuilder.Entity("EntityProject.entities.UserSession", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("bigint");

                    b.Property<int>("ChannelId")
                        .HasColumnName("channelId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnName("created_on")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("LastActivity")
                        .HasColumnName("last_activity")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Session")
                        .HasColumnName("session")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Status")
                        .HasColumnName("status")
                        .HasColumnType("int");

                    b.Property<long>("UserId")
                        .HasColumnName("user_id")
                        .HasColumnType("bigint");

                    b.Property<string>("UserType")
                        .HasColumnName("user_type")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<long>("ucid")
                        .HasColumnName("ucid")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("asset_capital_insurance_user_session");
                });

            modelBuilder.Entity("EntityProject.entities.Users", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("bigint");

                    b.Property<string>("Address")
                        .HasColumnName("address")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Bvn")
                        .HasColumnName("bvn")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("ChannelId")
                        .HasColumnName("channelId")
                        .HasColumnType("int");

                    b.Property<long>("ClientUniqueRef")
                        .HasColumnName("client_unique_ref")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("FirstName")
                        .HasColumnName("first_name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("LastName")
                        .HasColumnName("last_name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("NIN")
                        .HasColumnName("nin")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Password")
                        .HasColumnName("password")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("PhoneNumber")
                        .HasColumnName("phonenumber")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ProfilePic")
                        .HasColumnName("picture")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Status")
                        .HasColumnName("status")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnName("username")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("UserType")
                        .HasColumnName("user_type")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("createdAt")
                        .HasColumnName("created_at")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("asset_capital_insurance_user");
                });
#pragma warning restore 612, 618
        }
    }
}
